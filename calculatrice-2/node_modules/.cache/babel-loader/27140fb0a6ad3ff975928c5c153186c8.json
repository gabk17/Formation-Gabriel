{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabka\\\\Documents\\\\GitHub\\\\Formation-Gabriel\\\\calculatrice-2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [operator, setOperator] = useState(null);\n  const [memory, setMemory] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const addNumber = input => {\n    setNumber(parseFloat(number + input));\n  };\n\n  const addOperator = input => {\n    setMemory(number);\n    setNumber(0);\n    setOperator(input);\n  };\n\n  const doCalculate = () => {\n    setTotal(memory + number);\n    setNumber(0);\n    setMemory(total);\n    setOperator(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Total: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Memory: \", memory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Number: \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Operator: \", operator]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNumber(\"1\"),\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNumber(\"2\"),\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addOperator(\"+\"),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: doCalculate,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/BJRt+Th3nLdHbOB/PeeOfnOF68=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gabka/Documents/GitHub/Formation-Gabriel/calculatrice-2/src/App.js"],"names":["useState","App","number","setNumber","operator","setOperator","memory","setMemory","total","setTotal","addNumber","input","parseFloat","addOperator","doCalculate","padding"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;;AAGA,QAAMU,SAAS,GAAIC,KAAD,IAAW;AAC3BR,IAAAA,SAAS,CAACS,UAAU,CAACV,MAAM,GAAGS,KAAV,CAAX,CAAT;AACD,GAFD;;AAIA,QAAME,WAAW,GAAIF,KAAD,IAAW;AAC7BJ,IAAAA,SAAS,CAACL,MAAD,CAAT;AACAC,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAE,IAAAA,WAAW,CAACM,KAAD,CAAX;AAED,GALD;;AAOA,QAAMG,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAACH,MAAM,GAAGJ,MAAV,CAAR;AACAC,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAI,IAAAA,SAAS,CAACC,KAAD,CAAT;AACAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AAED,GAND;;AAQE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAACU,MAAAA,OAAO,EAAE;AAAV,KAA5B;AAAA,4BACE;AAAA,4BAAcP,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,oBAC8B;AAAA;AAAA;AAAA;AAAA,YAD9B,eAEE;AAAA,6BAAeF,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,oBAEgC;AAAA;AAAA;AAAA;AAAA,YAFhC,eAGE;AAAA,6BAAeJ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,oBAGgC;AAAA;AAAA;AAAA;AAAA,YAHhC,eAIE;AAAA,+BAAiBE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMM,SAAS,CAAC,GAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,GAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMG,WAAW,CAAC,GAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3CQb,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nfunction App() {\n\nconst [number, setNumber] = useState(0);\nconst [operator, setOperator] = useState(null);\nconst [memory, setMemory] = useState(0);\nconst [total, setTotal] = useState(0);\n\n\nconst addNumber = (input) => {\n  setNumber(parseFloat(number + input))\n}\n\nconst addOperator = (input) => {\n  setMemory(number)\n  setNumber(0)\n  setOperator(input)\n\n}\n\nconst doCalculate = () => {\n  setTotal(memory + number)\n  setNumber(0)\n  setMemory(total)\n  setOperator(null)\n\n}\n\n  return (\n    <div className=\"App\" style={{padding: '100px'}}>\n      <span>Total: {total}</span> <br />\n      <span>Memory: {memory}</span> <br />\n      <span>Number: {number}</span> <br />\n      <span>Operator: {operator}</span> \n\n      <div>\n        <button onClick={() => addNumber(\"1\")}>1</button>\n        <button onClick={() => addNumber(\"2\")}>2</button>\n        <button onClick={() => addOperator(\"+\")}>+</button>\n        <button onClick={doCalculate}>=</button>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}